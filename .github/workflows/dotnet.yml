name: .NET

on:
  push:
    branches: [ cicd_testing ]
  pull_request:
    branches: [ main ]


jobs:
  build:
    runs-on: windows-latest

    env:
          Solution_Name: 'TarkovAssistantWPF.sln'
          Project_Application: 'TarkovAssistantWPF'
          Project_Installer: 'TarkovAssistantSetup'
          ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Install application dependencies
      run: msbuild -t:restore .\TarkovAssistantWPF.csproj

      # Build actual application
    - name: Build Application
      run: msbuild $env:Solution_Name /t:$env:Project_Application /p:Configuration=Release

    - name: Check paths
      run: 'Write-Host $pwd'


    - name: Workaround for OutOfProc build
      run: |
        $OLD_PATH=$pwd
        cd "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE\CommonExtensions\Microsoft\VSI\DisableOutOfProcBuild\"
        ./DisableOutOfProcBuild.exe
        cd $OLD_PATH

      
    - name: Build Installer
      # Finds 'devenv.exe' path, uses '.com' version of program;
      # .exe seems to build asynchronously, whereas .com will wait for build finish and output.
      run: |
        $devenv = & vswhere.exe '-property' productPath
        $devenv = $devenv -replace '.exe', '.com'

        Write-Host "Using devenv: $devenv"

        Write-Host "Building using global project switch"
        & $devenv ./$env:Solution_Name /build Release /project TarkovAssistantSetup


    - name: Write tree
      run: 'tree'

    - name: Setup csc.exe (C# compiler)
      uses: yoavain/Setup-CSC@v7

    - name: Generate Auto-Update files
      run: |
        cd ./scripts/
        ./BuildAndDeploy.ps1     

    - name: Copy Installer to Update staging area
      run: |
        ls .\TarkovAssistantSetup\
        cp .\TarkovAssistantSetup\Release\TarkovAssistantSetup.msi .\updates\ 


    # - name: Deploy Auto-Update files to S3
    #   uses:  anshulrgoyal/upload-s3-action@master
    #   with:
    #     aws_key_id: ${{ secrets.S3_ACCESS_KEY }}
    #     aws_secret_access_key: ${{ secrets.S3_SECRET_ACCESS_KEY }}
    #     aws_bucket: 'jwscully.uk'
    #     source_dir: 'updates/'
    #     destination_dir: "tarkov-assistant"

      
      
# run: devenv $env:Solution_Name /build Release /project $env:Project_Installer
